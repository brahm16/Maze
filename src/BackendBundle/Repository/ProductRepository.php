<?php

namespace BackendBundle\Repository;
use Doctrine\ORM\EntityRepository;
use BackendBundle\Entity\Product;
use Doctrine\ORM\NonUniqueResultException;
use Doctrine\ORM\Query;
/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends \Doctrine\ORM\EntityRepository
{


    /**
     * get all posts
     *
     * @return array
     */
    public function findAllPosts()
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT a
         FROM BackendBundle:Product a
      
         ORDER BY a.priceTTC DESC'
            )
            ->getArrayResult();
    }

    /**
     * get one by id
     *
     * @param integer $id
     *
     * @return object or null
     */
    public function findPostByid($id)
    {
        try {
            return $this->getEntityManager()
                ->createQuery(
                    "SELECT p
                FROM BackendBundle:Product
                p WHERE p.id =:id"
                )
                ->setParameter('id', $id)
                ->getOneOrNullResult();
        } catch (NonUniqueResultException $e) {
        }
    }
    public function findEntitiesByString($str){
        return $this->getEntityManager()
            ->createQuery(
                "SELECT p
                FROM BackendBundle:Product p
                WHERE p.productType=:str"
            )
            ->setParameter('str', '%'.$str.'%')
            ->getResult();
    }

}


